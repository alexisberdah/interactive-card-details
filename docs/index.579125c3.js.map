{"mappings":"AAAA,SAAS,cAAc,CAAC,UAAU,SAAS,GAAG;AAE9C,SAAS,sBAAsB;IAC3B,MAAM,YAAY,SAAS,cAAc,CAAC,QAAQ,SAAS;IAC3D,MAAM,QAAQ;IACd,IAAI,WAAW,MAAM,IAAI,CAAC;IAC1B,QAAQ,GAAG,CAAC,uBAAuB;AACvC;AAEA,SAAS,aAAa,KAAK,EAAE;IACzB,QAAQ,GAAG,CAAC;IACZ;AACJ;AAEA,SAAS,YAAY,KAAK,EAAE;IACxB,MAAM,OAAO,MAAM,MAAM,CAAC,IAAI;IAC9B,IAAI,QAAQ,MAAM,MAAM,CAAC,KAAK;IAC9B,IAAI;IACJ,IAAI;IACJ,OAAQ;QACJ,KAAK;YACD,MAAM,QAAQ;YACd,MAAM,UAAU,MAAM,IAAI,CAAC;YAC3B,IAAI,CAAC,SAAS;gBACV,QAAQ,MAAM,SAAS,CAAC,GAAG,MAAM,MAAM,GAAG;gBAC1C,MAAM,MAAM,CAAC,KAAK,GAAG;YACzB,OACI,SAAS,cAAc,CAAC,QAAQ,SAAS,GAAG,MAAM,WAAW;YAEjE,IAAI,SAAS,IACT,SAAS,cAAc,CAAC,QAAQ,SAAS,GAAG;YAEhD,KAAK;QACT,KAAK;YACD,MAAM;YACN,IAAI,MAAM,MAAM,GAAG,IAAI;gBACnB,QAAQ,MAAM,SAAS,CAAC,GAAG,MAAM,MAAM,GAAG;gBAC1C,MAAM,MAAM,CAAC,KAAK,GAAG;YACzB,CAAC;YACD,uDAAuD;YACvD,SAAS,QAAQ,IAAI,SAAS,CAAC,MAAM,MAAM;YAC3C,SAAS,cAAc,CAAC,UAAU,SAAS,GAAG;YAC9C,SAAS,cAAc,CAAC,UAAU,SAAS,GAAG;YAE9C,IAAI,SAAS,IACT,SAAS,cAAc,CAAC,UAAU,SAAS,GAAG;YAElD,KAAK;QACT,KAAK;YACD,MAAM;YACN,IAAI,MAAM,MAAM,GAAG,GAAG;gBAClB,QAAQ,MAAM,SAAS,CAAC,GAAG,MAAM,MAAM,GAAG;gBAC1C,MAAM,MAAM,CAAC,KAAK,GAAG;YACzB,CAAC;YACD,SAAS,QAAQ,IAAI,SAAS,CAAC,MAAM,MAAM;YAC3C,SAAS,cAAc,CAAC,SAAS,SAAS,GAAG;YAC7C,KAAK;QACT,KAAK;YACD,MAAM;YACN,IAAI,MAAM,MAAM,GAAG,GAAG;gBAClB,QAAQ,MAAM,SAAS,CAAC,GAAG,MAAM,MAAM,GAAG;gBAC1C,MAAM,MAAM,CAAC,KAAK,GAAG;YACzB,CAAC;YACD,SAAS,QAAQ,IAAI,SAAS,CAAC,MAAM,MAAM;YAC3C,SAAS,cAAc,CAAC,QAAQ,SAAS,GAAG;YAC5C,KAAK;QACT,KAAK;YACD,MAAM;YACN,IAAI,MAAM,MAAM,GAAG,GAAG;gBAClB,QAAQ,MAAM,SAAS,CAAC,GAAG,MAAM,MAAM,GAAG;gBAC1C,MAAM,MAAM,CAAC,KAAK,GAAG;YACzB,CAAC;YACD,SAAS,QAAQ,IAAI,SAAS,CAAC,MAAM,MAAM;YAC3C,SAAS,cAAc,CAAC,OAAO,SAAS,GAAG;YAC3C,KAAK;QACT;YACI,KAAK;IACb;IACA,QAAQ,GAAG,CAAC,2BAA2B,MAAM,MAAM,CAAC,KAAK;AAC7D;AAEA,SAAS,kBAAkB;IACvB,IAAI,MAAM,SAAS,cAAc,CAAC,UAAU,SAAS;IACrD,IAAI,SAAS,IAAI,KAAK,CAAC;IACvB,IAAI,eAAe,OAAO,IAAI,CAAC;IAC/B,OAAO;AACX,EAEA,iCAAiC;CACjC,6EAA6E;CAC7E,IAAI","sources":["src/index.js"],"sourcesContent":["document.getElementById(\"number\").innerHTML = formattedNumber()\n\nfunction checkFieldsValidity() {\n    const nameInput = document.getElementById(\"name\").innerHTML\n    const regex = /^([a-zA-Z]+\\s)+[a-zA-Z]+$/\n    let isNameOK = regex.test(nameInput)\n    console.log('Alex debug isNameOK', isNameOK)\n}\n\nfunction handleSubmit(event) {\n    console.log('Alex debug handleSubmit')\n    checkFieldsValidity()\n}\n\nfunction handleInput(event) {\n    const type = event.target.name\n    let value = event.target.value\n    let str\n    let newStr\n    switch (type) {\n        case 'name':\n            const regex = /^([a-zA-Z' '])+$/\n            const isValid = regex.test(value);\n            if (!isValid) {\n                value = value.substring(0, value.length - 1)\n                event.target.value = value\n            } else {\n                document.getElementById(\"name\").innerHTML = value.toUpperCase()\n            }\n            if (value == '') {\n                document.getElementById(\"name\").innerHTML = 'JANE APPLESEED'\n            }\n            break\n        case 'number':\n            str = '0000000000000000'\n            if (value.length > 16) {\n                value = value.substring(0, value.length - 1)\n                event.target.value = value\n            }\n            // let lastChar = str.charAt(str.length - value.length)\n            newStr = value + str.substring(value.length)\n            document.getElementById(\"number\").innerHTML = newStr\n            document.getElementById(\"number\").innerHTML = formattedNumber()\n\n            if (value == '') {\n                document.getElementById(\"number\").innerHTML = '0000 0000 0000 0000'\n            }\n            break\n        case 'month':\n            str = '00'\n            if (value.length > 2) {\n                value = value.substring(0, value.length - 1)\n                event.target.value = value\n            }\n            newStr = value + str.substring(value.length)\n            document.getElementById(\"month\").innerHTML = newStr\n            break\n        case 'year':\n            str = '00'\n            if (value.length > 2) {\n                value = value.substring(0, value.length - 1)\n                event.target.value = value\n            }\n            newStr = value + str.substring(value.length)\n            document.getElementById(\"year\").innerHTML = newStr\n            break\n        case 'cvc':\n            str = '000'\n            if (value.length > 3) {\n                value = value.substring(0, value.length - 1)\n                event.target.value = value\n            }\n            newStr = value + str.substring(value.length)\n            document.getElementById(\"cvc\").innerHTML = newStr\n            break\n        default:\n            break\n    }\n    console.log('Alex debug handle input', event.target.value)\n}\n\nfunction formattedNumber() {\n    let str = document.getElementById(\"number\").innerHTML\n    let chunks = str.match(/.{1,4}/g)\n    let formattedStr = chunks.join(' ')\n    return formattedStr\n}\n\n// function unformattedNumber() {\n//     return document.getElementById(\"number\").innerHTML.replace(/\\s+/g, '')\n// }\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}